{"version":3,"file":"static/js/736.0db8e187.chunk.js","mappings":"yNAuCA,UAnCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,IAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,mCAAG,8GAEaC,EAAAA,EAAAA,IAAgBJ,GAF7B,OAEJK,EAFI,OAIVN,EADaM,EACGC,SAJN,gDAMVC,QAAQC,IAAR,MANU,yDAAH,qDASXL,GACD,GAAE,CAACH,IACCF,EAIL,OACE,wBACsB,IAAnBA,EAAQW,QACP,qEAEAX,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,oCAAYD,MACZ,yBAAIC,EAAJ,SAFOF,EADC,KASnB,C","sources":["pages/Reviews.jsx"],"sourcesContent":["import { getMovieReviews } from 'components/Api/Api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const response = await getMovieReviews(movieId);\n        const data = response;\n        setReviews(data.results);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetch();\n  }, [movieId]);\n  if (!reviews) {\n    return;\n  }\n\n  return (\n    <ul>\n      {reviews.length === 0 ? (\n        <p>We don't have any reviews for this movie.</p>\n      ) : (\n        reviews.map(({ id, author, content }) => (\n          <li key={id}>\n            <p>Author: {author}</p>\n            <p>{content} </p>\n          </li>\n        ))\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","fetch","getMovieReviews","response","results","console","log","length","map","id","author","content"],"sourceRoot":""}